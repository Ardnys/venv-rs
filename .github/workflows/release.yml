name: ðŸ“¦ Release

on:
 push:
    tags:
      - '**[0-9]+.[0-9]+.[0-9]+*'
    branches:
      - main

env:
  RELEASE_NAME: ${{ github.ref_name }}  # e.g. "main" or "v1.2.3"

jobs:
  build-and-publish:
    name: Build & Publish Release
    runs-on: ubuntu-latest
    permissions:
      contents: write   # needed to create/update a release

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        # You can add targets like `x86_64-unknown-linux-musl` here if you build with cross
        # target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release binary
        run: |
          cargo build --release --locked
        env:
          RUSTFLAGS: -C target-cpu=native

      - name: Package artifact
        run: |
          mkdir -p release
          BIN_NAME=myapp                          # replace with your crate name
          OS=${{ matrix.os }}
          case "$OS" in
            ubuntu-latest)   PLATFORM=linux ;;
            macos-latest)    PLATFORM=macos ;;
            windows-latest)  PLATFORM=windows ;;
          esac
          EXT=""
          [[ "$PLATFORM" == "windows" ]] && EXT=".exe"
          cp target/release/$BIN_NAME$EXT release/${BIN_NAME}-${PLATFORM}${EXT}
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ env.RELEASE_NAME }}
          body: |
            ## Changelog
            - Short bullet list of changes...
          draft: false
          prerelease: ${{ contains(env.RELEASE_NAME, "beta") || contains(env.RELEASE_NAME, "alpha") }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v2
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release
          asset_name: ${{ matrix.os }}.zip
          asset_content_type: application/zip
